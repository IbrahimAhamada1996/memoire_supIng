security:
    role_hierarchy:       
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_OPERATEUR: [ROLE_OPERATEUR_EMPLOYE, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    enable_authenticator_manager: false
    encoders:

        App\Entity\User:
            algorithm: bcrypt
  
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                #where to redirect after logout
                #target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
           # switch_user: true
    

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/admin/users', roles: ROLE_SUPER_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/operateur, roles: ROLE_OPERATEUR_EMPLOYE }
